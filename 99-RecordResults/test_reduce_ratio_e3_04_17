test_reduce_ratio
Test reduce_ratio = 1e-3; percent = 0.5; intial mesh h = 0.2


Test Linear functinals J(u) = (u,g)



Case 1: u smooth and g smooth on unit square
--------- k = 1 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 
Mesh 7 ... 
Mesh 8 ... 
Mesh 9 ... 
Mesh 10 ... 
Mesh 11 ... 

---------- Report ------------
Functional source problem
Eq: -Laplace u = f
   u = uD on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 1
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 11
Estimator ACh:  0.000439
Err_Jh:     0.000410
Err_Jh_AC:  0.000497
--------- k = 2 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 

---------- Report ------------
Functional source problem
Eq: -Laplace u = f
   u = uD on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 2
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 6
Estimator ACh:  0.000927
Err_Jh:     0.001063
Err_Jh_AC:  0.000677
--------- k = 3 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 

---------- Report ------------
Functional source problem
Eq: -Laplace u = f
   u = uD on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 3
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 6
Estimator ACh:  0.000497
Err_Jh:     -0.000175
Err_Jh_AC:  0.001734


Case 2: u corner singularity and g=1 smooth
--------- k = 1 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 
Mesh 7 ... 
Mesh 8 ... 
Mesh 9 ... 
Mesh 10 ... 
Mesh 11 ... 
Mesh 12 ... 
Mesh 13 ... 
Mesh 14 ... 

---------- Report ------------
Functional source problem
Eq: -Laplace u = f
   u = uD on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 1
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 14
Estimator ACh:  0.000348
Err_Jh:     0.000031
Err_Jh_AC:  0.000760
--------- k = 2 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 
Mesh 7 ... 
Mesh 8 ... 
Mesh 9 ... 
Mesh 10 ... 

---------- Report ------------
Functional source problem
Eq: -Laplace u = f
   u = uD on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 2
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 10
Estimator ACh:  0.000527
Err_Jh:     0.000110
Err_Jh_AC:  0.000041
--------- k = 3 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 

---------- Report ------------
Functional source problem
Eq: -Laplace u = f
   u = uD on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 3
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 4
Estimator ACh:  0.000574
Err_Jh:     0.004402
Err_Jh_AC:  0.004600


Test Eigenvalue problems, target 1st eigenvalue



Case 1: unit square domain
--------- k = 1 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
[Warning: Matrix is close to singular or badly scaled. Results may be inaccurate. RCOND =
7.700843e-17.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('HDG_Eig_SolveEigenSystem_Elliptic', '/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_Eig_SolveEigenSystem_Elliptic.m', 27)" style="font-weight:bold">HDG_Eig_SolveEigenSystem_Elliptic</a> (<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_Eig_SolveEigenSystem_Elliptic.m',27,0)">line 27</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('HDG_EigPbSolver_Elliptic', '/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_EigPbSolver_Elliptic.m', 16)" style="font-weight:bold">HDG_EigPbSolver_Elliptic</a> (<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_EigPbSolver_Elliptic.m',16,0)">line 16</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('EllipticProblemDriver', '/Users/shiqiangxia/Desktop/hdg2dtriangular/01-ProblemDriver/EllipticProblemDriver.m', 388)" style="font-weight:bold">EllipticProblemDriver</a> (<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/01-ProblemDriver/EllipticProblemDriver.m',388,0)">line 388</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('main', '/Users/shiqiangxia/Desktop/hdg2dtriangular/01-ProblemDriver/main.m', 17)" style="font-weight:bold">main</a> (<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/01-ProblemDriver/main.m',17,0)">line 17</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('test_reduce_ratio', '/Users/shiqiangxia/Desktop/hdg2dtriangular/99-RecordResults/test_reduce_ratio.m', 60)" style="font-weight:bold">test_reduce_ratio</a> (<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/99-RecordResults/test_reduce_ratio.m',60,0)">line 60</a>)
] 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 
Mesh 7 ... 
Mesh 8 ... 
Mesh 9 ... 
Mesh 10 ... 
Mesh 11 ... 
Mesh 12 ... 
Mesh 13 ... 

---------- Report ------------
Functional eigen problem
Eq: -Laplace u = lam * u
   u = 0 on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 1
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 13
Target eigenvalue: 1
Estimator ACh:  0.000334
Err_lamh:     0.000351
Err_lamh_AC:  0.000308
--------- k = 2 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 

---------- Report ------------
Functional eigen problem
Eq: -Laplace u = lam * u
   u = 0 on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 2
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 6
Target eigenvalue: 1
Estimator ACh:  0.000813
Err_lamh:     0.000891
Err_lamh_AC:  0.000694
--------- k = 3 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 

---------- Report ------------
Functional eigen problem
Eq: -Laplace u = lam * u
   u = 0 on bounary
Functional: J(u) = (g,u)
Dom type: Rec
order k = 3
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 6
Target eigenvalue: 1
Estimator ACh:  0.000469
Err_lamh:     0.000200
Err_lamh_AC:  0.001580


Case 2: L-shape domain
--------- k = 1 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
Mesh 5 ... 
Mesh 6 ... 
Mesh 7 ... 
Mesh 8 ... 
Mesh 9 ... 
Mesh 10 ... 
Mesh 11 ... 
Mesh 12 ... 
Mesh 13 ... 
Mesh 14 ... 
Mesh 15 ... 
Mesh 16 ... 
Mesh 17 ... 
<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_Eig_AssembleMlambda_Elliptic.m',55,1)">55  </a>                end
abs(estimator_list(ii)/estimator_list(1)
 abs(estimator_list(ii)/estimator_list(1)
                                         
{Error: Invalid expression. When calling a function or indexing a variable, use parentheses.
Otherwise, check for mismatched delimiters.
} 
abs(estimator_list(ii)/estimator_list(1))
{Index exceeds the number of array elements (16).
} 
abs(estimator_list(ii-1)/estimator_list(1))

ans =

    0.0013

if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end

---------- Report ------------
Functional eigen problem
Eq: -Laplace u = lam * u
   u = 0 on bounary
Functional: J(u) = (g,u)
Dom type: L
order k = 1
Refinement: Adaptive with RGB
------------------------------
Reduce ratio goal: 0.001000
Adptive iterations: 17
Target eigenvalue: 1
Estimator ACh:  0.000746
Err_lamh:     0.000747
Err_lamh_AC:  0.000754
--------- k = 2 --------------
Initiate empty Parameter object.
Set problem parameters... done
Set domain and mesh parameters... done
Set numerical methods parameters... done
Set numericla experment parameters... done
--------------------------------
Start solving functional problem
Mesh 1 ... 
Mesh 2 ... 
Mesh 3 ... 
Mesh 4 ... 
[Warning: Matrix is close to singular or badly scaled. Results may be inaccurate. RCOND =
2.023743e-16.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('HDG_Eig_SolveEigenSystem_Elliptic', '/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_Eig_SolveEigenSystem_Elliptic.m', 27)" style="font-weight:bold">HDG_Eig_SolveEigenSystem_Elliptic</a> (<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_Eig_SolveEigenSystem_Elliptic.m',27,0)">line 27</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('HDG_EigPbSolver_Elliptic', '/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_EigPbSolver_Elliptic.m', 16)" style="font-weight:bold">HDG_EigPbSolver_Elliptic</a> (<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/04-HDG/EigenProblem/ellitpic/HDG_EigPbSolver_Elliptic.m',16,0)">line 16</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('EllipticProblemDriver', '/Users/shiqiangxia/Desktop/hdg2dtriangular/01-ProblemDriver/EllipticProblemDriver.m', 388)" style="font-weight:bold">EllipticProblemDriver</a> (<a href="matlab: opentoline('/Users/shiqiangxia/Desktop/hdg2dtriangular/01-ProblemDriver/EllipticProblemDriver.m',388,0)">line 388</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('main', '/Users/shiqiangxia/Desktop/hdg2dtriangular/01-ProblemDriver/main.m', 17)" style="fo