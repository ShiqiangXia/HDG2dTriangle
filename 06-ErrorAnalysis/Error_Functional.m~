function Error_Functional(func_type,para,mymesh,GQ1DRef_pts,GQ1DRef_wts,Jh,Jh_AC)
    
    if strcmp(func_type,'1')  % J(u) = (u,g)
        % need uexact, and source_g
        
        [uexact,source_g]=MyParaParse(para.pb_parameters,'uexact','source_g');
        
        NGQ = length(GQ1DRef_pts);
        num_elements = mymesh.num_elements;
        % Get Gauss Quadpoints on the square
        [a_list,b_list,Jacobian_rs_to_ab]= GetRefQuadPt(GQ1DRef_pts);
        % Map Gauss Quadpoints to the reference triangle
        [r_list,s_list] = ABtoRS(a_list,b_list);

        % compute (u,g) over the mesh elementes
        for element_idx = 1: num_elements
            
            temp_element = mymesh.element_list(element_idx,:);
            vertice_list = mymesh.vertices_list(temp_element(:),:);
            Jk = mymesh.Jacobian_list(element_idx);
            % Gauss points on any element
            [x_list,y_list] = RStoXY(r_list,s_list,Jk,vertice_list);

            g_VD = source_g([x_list,y_list]);
            g_VD = reshape(g_VD,[],NGQ);
            
            uexact_pts = uexact([x_list,y_list]);
            ueact_pts = 
            
        end
        
        
    else
        error ('This type of error has not been implemented yet.')
    end
    % part 1: compute error J(u) - J(uh) and J(u) - Jh_AC 
    
    
    % part 2: compute error terms based on formula
    
end